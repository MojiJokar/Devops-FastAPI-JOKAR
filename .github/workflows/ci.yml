name: FastAPI CI Pipeline

on: [push, pull_request]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]  # Quoted versions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

     - name: Validate pyproject.toml
            run: |
               echo "Current directory: $(pwd)"
                ls -la  # List all files
                test -f pyproject.toml || (echo "::error::Missing pyproject.toml";
      exit 1)

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Lint with flake8
        run: poetry run flake8 src/ tests/
      - name: Verify project structure
        run: |  # <-- This line
            echo "Current directory: $(pwd)"
            ls -la
            test -f pyproject.toml || (echo "::error::Missing pyproject.toml"; exit 1)
            
      - name: Run tests with pytest
        run: poetry run pytest --cov=src --cov-report=xml --cov-report=html

      - name: Upload coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov-${{ matrix.python-version }}
          path: htmlcov/

      - name: Build package
        run: poetry build

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.python-version }}
          path: dist/*.whl



        
